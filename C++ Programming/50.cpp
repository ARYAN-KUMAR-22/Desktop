// C++ WHAT IS OOP?

/* OOP STANDS FOR OBJECT-ORIENTED PROGRAMMING

PROCEDURAL PROGRAMMING IS ABOUTWRITING PROCEDURES OR FUNCTIONS THAT PERFORM OPERATIONS ON THE DATA, WHILE OBJECT-ORIENTED PROGRING IS ABOUT CREATING OBJECTS THAT CONTAIN BOTH DATA AND FUNCTIONS.

OBJECT ORIENTED PROGRAMMING HAS SEVERAL ADVANTAGES OVER PROCEDURAL PROGRAMMING.

	-> OOP IS FASTER AND EASIER TO EXECUTE.
	-> OOP PROVIDES A CLEAR STRUCTURE FOR THE PROGRAMS
	-> OOP HELPS TO KEEP THE C++ CODE DRY " DON'T REPEAT YOURSELF", AND MAKES THE CODE EASIER TO MAINTAIN, MODIFY AND DEBUG.
	-> OOP MAKES IT POSSIBLE TO CREATE FULL REUSABLE APPLICATION WITH LESS CODE AND SHORTER DEVELOPMENT TIME.

TIP : THE "DON'T REPEAT YOURSELF" (DRY) PRINCIPLE IS ABOUT REDUCING THE REPITITION OF CODE. YOU SHOULD EXTRACT THE CODES THAT ARE COMMON FOR THE APPLICATION, AND PLACE THEM AT A SINGLE PLACE AND REUSE THEM INSTEAD OF REPEATING IT.

C++ WHAT ARE CLASSES AND OBJECTS?

CLASSES AND OBJECTS ARE THE TWO ASPECTS OF OBJECT-ORIENTED PROGRAMMING.

SOME EXAMPLES TO DIFFERENTIATE TWO ARE :

	CLASS		OBJECTS
			APPLE
	FRUIT		BANANA
			MANGO

	CLASS		OBJECTS
			AUDI
	CAR		VOLVO
			TOYOTA

SO, A CLASS IS A TEMPLATE FOR OBJECTS, AND AN OBJECT IS AN INSTANCE OF CLASS.

WHEN THE INDIVIDUAL OBJECTS ARE CREATED, THEY INHERIT ALL THE VARIABLES AND FUNCTIONS FROM THE CLASS.

*/
